version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ten-agent-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ten_agent_dev
      MYSQL_USER: ten_user
      MYSQL_PASSWORD: ten_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ten-agent-dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ten-agent-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - ten-agent-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: ten-agent-minio-dev
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - ten-agent-dev-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: memory-postcard-backend-dev
    restart: unless-stopped
    environment:
      # 数据库配置
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ten_user
      DB_PASSWORD: ten_password
      DB_NAME: ten_agent_dev

      # Redis 配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""

      # MinIO 配置
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET_NAME: ten-agent-bucket
      MINIO_USE_SSL: "false"

      # JWT 配置
      JWT_SECRET: "memory-postcard-dev-secret-key-2024"

      # 应用配置
      PORT: 8080
      ENVIRONMENT: development

      # AI 服务配置（可选）
      OPENAI_API_KEY: ""
      OPENAI_BASE_URL: "https://api.openai.com/v1"
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - ten-agent-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  ten-agent-dev-network:
    driver: bridge
