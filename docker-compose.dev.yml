version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ten-agent-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ten_agent_dev
      MYSQL_USER: ten_user
      MYSQL_PASSWORD: ten_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ten-agent-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ten-agent-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - ten-agent-dev-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: ten-agent-minio-dev
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - ten-agent-dev-network
    command: server /data --console-address ":9001"

  # MinIO Client for bucket creation
  minio-client:
    image: minio/mc:latest
    container_name: ten-agent-minio-client
    depends_on:
      - minio
    networks:
      - ten-agent-dev-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/ten-agent-bucket --ignore-existing;
      /usr/bin/mc policy set public myminio/ten-agent-bucket;
      exit 0;
      "

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  ten-agent-dev-network:
    driver: bridge